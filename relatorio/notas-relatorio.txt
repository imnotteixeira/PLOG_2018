3.4 Execução de Jogadas

Após inserção do utilizador da posição na qual deseja jogar, é utilizado o predicado "move" de forma a validar e aplicar a jogada. Com recurso ao tabuleiro, ao identificador do jogador e à posição desejada,  utiliza-se o predicado "valid_move" referido no capítulo anterior. Caso a jogada não seja validada, é mostrada uma mensagem de erro ao utilizador, pedindo novamente que insira uma jogada valida. Assim que "move" possuir uma posição que resulte numa jogada válida, é então utilizado o predicado "play" de forma a gerar o novo tabuleiro. Para gerar o tabuleiro corretamente, é necessário primeiro perceber qual o valor que deverá ser inserido na célula selecionada. Assim, desenvolvemos o predicado "get_player_new_elem" que nos permite instanciar numa variável o valor mencionado. Após isto, é criado um novo tabuleiro com as novas alterações através do predicado "update_matrix_at". Com o "update_matrix_at" são percorridas recursivamente as colunas até à linha pretendida, percorrendo também os seus elementos até encontrar o elemento nas coordenadas desejadas. Nesse momento, é reconstruido o tabuleiro refletindo a jogada e permitindo então passar a seguinte.


3.5 Final do Jogo

De forma a garantir uma identificação do estado final do jogo e terminação do mesmo, foi criado um predicado "game_over" que establece uma ligação entre um tabuleiro e o jogador vencedor segundo o estado desse tabuleiro. No caso de não existir um vencedor, o predicado falha, permitindo ao ciclo principal do jogo proseguir. No entanto, caso o predicado se verifique, o ciclo termina e escreve na consola o vencedor. "game_over" apresenta os resultados esperados utilizando o predicado "valid_move" descrito em capítulos anteriores, pois o jogo termina quando não existem jogadas possíveis para um dos participantes. Caso exista uma posição válida, "valid_move" será executado com sucesso, demonstrando que existe pelo menos uma jogada possível e que o jogo ainda não terminou. Caso contrário, se não existir uma jogada possível, "valid_move" falha. Assim, é apenas necessário negar o resultado de "valid_move" para obter o valor de "game_over".
Em iterações anteriores foram utilizados métodos com "findall" ou "setof" a partir de "valid_move", que produzem uma lista de resultados possíveis. No entanto, mostrou-se mais eficiente a utilização do predicado "valid_move" apenas, pois assim que é encontrada uma jogada válida conclui-se "game_over" sem haver a necessidade de produzir uma lista com todas as jogadas possíveis.